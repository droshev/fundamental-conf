{"ast":null,"code":"import { renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"scrollParallax\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_renderSlot(_ctx.$slots, \"default\")], 512);\n}","map":{"version":3,"mappings":";;EACOA,GAAG,EAAC;AAAgB;;uBAAzBC,oBAGM,OAHNC,UAGM,GAFJC,YACOC","names":["ref","_createElementBlock","_hoisted_1","_renderSlot","_ctx"],"sourceRoot":"","sources":["/Users/I587926/Documents/Ang-prj/fundamental-conf/fundamental_conference_landing/node_modules/vue3-parallax/src/components/ScrollParallax.vue"],"sourcesContent":["<template>\n  <div ref=\"scrollParallax\">\n    <slot>\n    </slot>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'ScrollParallax',\n    props: {\n      speed: {\n        type: Number,\n        required: true,\n        default: 0.15\n      },\n      down: {\n        type: Boolean,\n        default: false,\n        required: false\n      },\n      up: {\n        type: Boolean,\n        default: true,\n        required: false\n      },\n      right: {\n        type: Boolean,\n        default: true,\n        required: false\n      },\n      left: {\n        type: Boolean,\n        default: false,\n        requiredequired: false\n      },\n      direction: {\n        type: String,\n        default: 'y',\n        required: false\n      }\n    },\n    data() {\n      return {\n        el: null,\n        axes: null,\n        speedCoeff: null\n      }\n    },\n    methods: {\n      loadParallax() {\n        this.initDirection();\n        this.el = this.$refs.scrollParallax;\n        // const speedCoeff = this.down ? -this.speed : this.speed;\n        window.addEventListener('scroll', () => {\n          this.el.style.transform = `translate${this.axes}(${window.pageYOffset * this.speedCoeff}px)`;\n        });\n      },\n      initDirection() {\n        if (this.direction === 'x') {\n          this.axes = 'X';\n          if (this.left) {\n            this.speedCoeff = -this.speed;\n          }\n          else {\n            this.speedCoeff = this.speed;\n          }\n        }\n        else if (this.direction === 'y'){\n          this.axes = 'Y' ;\n          if (this.down) {\n            this.speedCoeff = -this.speed;\n          }\n          else {\n            this.speedCoeff = this.speed;\n          }\n        }\n      }\n    },\n    mounted() {\n      this.loadParallax();\n    }\n  };\n</script>\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}